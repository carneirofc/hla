<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="SiriusMainWindow" name="MainWindow">
  <property name="windowModality">
   <enum>Qt::WindowModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>2290</width>
    <height>1856</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Slow Orbit Feedback System</string>
  </property>
  <property name="documentMode">
   <bool>false</bool>
  </property>
  <property name="dockNestingEnabled">
   <bool>true</bool>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QGridLayout" name="gridLayout_3">
    <item row="1" column="0">
     <widget class="QTabWidget" name="tabWidget">
      <property name="minimumSize">
       <size>
        <width>120</width>
        <height>0</height>
       </size>
      </property>
      <property name="cursor">
       <cursorShape>ArrowCursor</cursorShape>
      </property>
      <property name="tabShape">
       <enum>QTabWidget::Triangular</enum>
      </property>
      <property name="currentIndex">
       <number>0</number>
      </property>
      <property name="elideMode">
       <enum>Qt::ElideNone</enum>
      </property>
      <property name="tabBarAutoHide">
       <bool>false</bool>
      </property>
      <widget class="QWidget" name="Correctors">
       <attribute name="title">
        <string>Correctors</string>
       </attribute>
       <layout class="QGridLayout" name="gridLayout_14">
        <item row="2" column="0">
         <spacer name="horizontalSpacer_11">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item row="2" column="2">
         <spacer name="horizontalSpacer_12">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item row="2" column="5">
         <widget class="QCheckBox" name="checkBox_3">
          <property name="text">
           <string>Reference</string>
          </property>
         </widget>
        </item>
        <item row="2" column="7">
         <widget class="QCheckBox" name="checkBox_2">
          <property name="text">
           <string>Calculated Kicks</string>
          </property>
         </widget>
        </item>
        <item row="2" column="3">
         <widget class="QCheckBox" name="checkBox_4">
          <property name="text">
           <string>Readback</string>
          </property>
         </widget>
        </item>
        <item row="2" column="8">
         <spacer name="horizontalSpacer_10">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item row="2" column="1">
         <widget class="QCheckBox" name="checkBox">
          <property name="text">
           <string>Setpoint</string>
          </property>
         </widget>
        </item>
        <item row="2" column="4">
         <spacer name="horizontalSpacer_13">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item row="2" column="6">
         <spacer name="horizontalSpacer_14">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item row="0" column="0" colspan="9">
         <widget class="PyDMWaveformPlot" name="PyDMWaveformPlot_2">
          <property name="toolTip">
           <string/>
          </property>
          <property name="whatsThis">
           <string>
    PyDMWaveformPlot is a widget to plot one or more waveforms.  Each curve can plot
    either a Y-axis waveform vs. its indices, or a Y-axis waveform against an X-axis
    waveform.

    Parameters
    ----------
    parent : optional
        The parent of this widget.
    init_x_channels: optional
        init_x_channels can be a string with the address for a channel, or a list of
        strings, each containing an address for a channel.  If not specified, y-axis
        waveforms will be plotted against their indices.  If a list is specified for
        both init_x_channels and init_y_channels, they both must have the same length.
        If a single x channel was specified, and a list of y channels are specified, all
        y channels will be plotted against the same x channel.
    init_y_channels: optional
        init_y_channels can be a string with the address for a channel, or a list of
        strings, each containing an address for a channel.  If a list is specified for
        both init_x_channels and init_y_channels, they both must have the same length.
        If a single x channel was specified, and a list of y channels are specified, all
        y channels will be plotted against the same x channel.
    background: optional
        The background color for the plot.  Accepts any arguments that pyqtgraph.mkColor
        will accept.
    </string>
          </property>
          <property name="backgroundBrush">
           <brush brushstyle="SolidPattern">
            <color alpha="255">
             <red>255</red>
             <green>255</green>
             <blue>255</blue>
            </color>
           </brush>
          </property>
          <property name="showXGrid">
           <bool>true</bool>
          </property>
          <property name="showYGrid">
           <bool>true</bool>
          </property>
          <property name="curves">
           <stringlist>
            <string>{&quot;y_channel&quot;: &quot;${PREFIX}DeltaKicksCH-Mon&quot;, &quot;x_channel&quot;: null, &quot;name&quot;: &quot;Calculated Kick&quot;, &quot;color&quot;: &quot;blue&quot;, &quot;lineStyle&quot;: 1, &quot;lineWidth&quot;: 3, &quot;symbol&quot;: &quot;o&quot;, &quot;symbolSize&quot;: 10, &quot;redraw_mode&quot;: 2}</string>
           </stringlist>
          </property>
         </widget>
        </item>
        <item row="1" column="0" colspan="9">
         <widget class="PyDMWaveformPlot" name="PyDMWaveformPlot">
          <property name="toolTip">
           <string/>
          </property>
          <property name="whatsThis">
           <string>
    PyDMWaveformPlot is a widget to plot one or more waveforms.  Each curve can plot
    either a Y-axis waveform vs. its indices, or a Y-axis waveform against an X-axis
    waveform.

    Parameters
    ----------
    parent : optional
        The parent of this widget.
    init_x_channels: optional
        init_x_channels can be a string with the address for a channel, or a list of
        strings, each containing an address for a channel.  If not specified, y-axis
        waveforms will be plotted against their indices.  If a list is specified for
        both init_x_channels and init_y_channels, they both must have the same length.
        If a single x channel was specified, and a list of y channels are specified, all
        y channels will be plotted against the same x channel.
    init_y_channels: optional
        init_y_channels can be a string with the address for a channel, or a list of
        strings, each containing an address for a channel.  If a list is specified for
        both init_x_channels and init_y_channels, they both must have the same length.
        If a single x channel was specified, and a list of y channels are specified, all
        y channels will be plotted against the same x channel.
    background: optional
        The background color for the plot.  Accepts any arguments that pyqtgraph.mkColor
        will accept.
    </string>
          </property>
          <property name="backgroundBrush">
           <brush brushstyle="SolidPattern">
            <color alpha="255">
             <red>255</red>
             <green>255</green>
             <blue>255</blue>
            </color>
           </brush>
          </property>
          <property name="showXGrid">
           <bool>true</bool>
          </property>
          <property name="showYGrid">
           <bool>true</bool>
          </property>
          <property name="curves">
           <stringlist>
            <string>{&quot;y_channel&quot;: &quot;${PREFIX}DeltaKicksCH-Mon&quot;, &quot;x_channel&quot;: null, &quot;name&quot;: &quot;Calculated Kick&quot;, &quot;color&quot;: &quot;red&quot;, &quot;lineStyle&quot;: 1, &quot;lineWidth&quot;: 3, &quot;symbol&quot;: &quot;o&quot;, &quot;symbolSize&quot;: 10, &quot;redraw_mode&quot;: 2}</string>
           </stringlist>
          </property>
         </widget>
        </item>
       </layout>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>2290</width>
     <height>19</height>
    </rect>
   </property>
   <widget class="QMenu" name="Menu_Open">
    <property name="title">
     <string>Open</string>
    </property>
    <addaction name="Action_openCorrParams"/>
    <addaction name="Action_openIOCLog"/>
    <addaction name="Action_openOrbRegs"/>
    <addaction name="Action_openAll"/>
    <addaction name="Action_Close_All"/>
   </widget>
   <addaction name="Menu_Open"/>
  </widget>
  <widget class="QStatusBar" name="statusbar">
   <property name="enabled">
    <bool>true</bool>
   </property>
  </widget>
  <action name="Action_openCorrParams">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="checked">
    <bool>true</bool>
   </property>
   <property name="enabled">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>Correction &amp;Parameters</string>
   </property>
   <property name="visible">
    <bool>true</bool>
   </property>
  </action>
  <action name="Action_openIOCLog">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="checked">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>IOC &amp;Log</string>
   </property>
   <property name="toolTip">
    <string>IOC Log</string>
   </property>
  </action>
  <action name="Action_openOrbRegs">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="checked">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>Orbit &amp;Registers</string>
   </property>
  </action>
  <action name="Action_openAll">
   <property name="checked">
    <bool>false</bool>
   </property>
   <property name="text">
    <string>&amp;Open All</string>
   </property>
   <property name="toolTip">
    <string>Open all dockable windows</string>
   </property>
   <property name="shortcut">
    <string>Alt+O</string>
   </property>
  </action>
  <action name="Action_Close_All">
   <property name="text">
    <string>&amp;Close All</string>
   </property>
   <property name="shortcut">
    <string>Alt+C</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>PyDMWaveformPlot</class>
   <extends>QGraphicsView</extends>
   <header>pydm.widgets.waveformplot</header>
  </customwidget>
  <customwidget>
   <class>SiriusMainWindow</class>
   <extends>QMainWindow</extends>
   <header>siriushla.widgets.windows</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
