<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1000</width>
    <height>500</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>1000</width>
    <height>500</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>1039</width>
    <height>548</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QWidget" name="layoutWidget_3">
   <property name="geometry">
    <rect>
     <x>20</x>
     <y>10</y>
     <width>481</width>
     <height>51</height>
    </rect>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout_3">
    <item>
     <widget class="PyDMLabel" name="PyDMLabel_49">
      <property name="toolTip">
       <string/>
      </property>
      <property name="whatsThis">
       <string/>
      </property>
      <property name="styleSheet">
       <string notr="true">border: 0px</string>
      </property>
      <property name="text">
       <string>Params</string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="PyDMLineEdit" name="le_params_file">
      <property name="toolTip">
       <string/>
      </property>
      <property name="whatsThis">
       <string>
    Writeable text field to send and display channel values
    </string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="PyDMPushButton" name="pb_browse">
      <property name="enabled">
       <bool>true</bool>
      </property>
      <property name="toolTip">
       <string/>
      </property>
      <property name="whatsThis">
       <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move
    
    Parameters
    ----------
    pressValue : int, float, str
        Value to be sent when the button is clicked
    
    channel : str
        ID of channel to manipulate

    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton


    relative : bool, optional
        Choice to have the button peform a relative put, instead of always
        setting to an absolute value
    </string>
      </property>
      <property name="text">
       <string>Browse</string>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QSplitter" name="splitter_7">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>70</y>
     <width>951</width>
     <height>386</height>
    </rect>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
   <widget class="QWidget" name="layoutWidget_4">
    <layout class="QGridLayout" name="gridLayout_6">
     <item row="0" column="0">
      <widget class="QFrame" name="frame_11">
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <widget class="QSplitter" name="splitter">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>10</y>
          <width>131</width>
          <height>21</height>
         </rect>
        </property>
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <widget class="PyDMCheckbox" name="cb_select_all_si">
         <property name="enabled">
          <bool>true</bool>
         </property>
         <property name="toolTip">
          <string/>
         </property>
         <property name="whatsThis">
          <string/>
         </property>
         <property name="text">
          <string>Storage Ring</string>
         </property>
        </widget>
       </widget>
       <widget class="QSplitter" name="splitter_2">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>40</y>
          <width>113</width>
          <height>66</height>
         </rect>
        </property>
        <property name="orientation">
         <enum>Qt::Vertical</enum>
        </property>
        <widget class="PyDMCheckbox" name="cb_quadrupole_si">
         <property name="enabled">
          <bool>true</bool>
         </property>
         <property name="toolTip">
          <string/>
         </property>
         <property name="whatsThis">
          <string/>
         </property>
         <property name="text">
          <string>Quadrupole</string>
         </property>
        </widget>
        <widget class="PyDMCheckbox" name="cb_sextupole_si">
         <property name="enabled">
          <bool>true</bool>
         </property>
         <property name="toolTip">
          <string/>
         </property>
         <property name="whatsThis">
          <string/>
         </property>
         <property name="text">
          <string>Sextupole</string>
         </property>
        </widget>
        <widget class="PyDMCheckbox" name="cb_dipole_si">
         <property name="enabled">
          <bool>true</bool>
         </property>
         <property name="toolTip">
          <string/>
         </property>
         <property name="whatsThis">
          <string/>
         </property>
         <property name="text">
          <string>Dipole</string>
         </property>
        </widget>
       </widget>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QFrame" name="frame_12">
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <layout class="QFormLayout" name="formLayout_10">
        <property name="fieldGrowthPolicy">
         <enum>QFormLayout::AllNonFixedFieldsGrow</enum>
        </property>
        <item row="0" column="1">
         <widget class="QSplitter" name="splitter_12">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_select_all_bo">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Booster</string>
           </property>
          </widget>
         </widget>
        </item>
        <item row="1" column="1">
         <widget class="QSplitter" name="splitter_3">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_quadrupole_bo">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Quadrupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_sextupole_bo">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Sextupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_dipole_bo">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Dipole</string>
           </property>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="QFrame" name="frame_13">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Minimum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <layout class="QFormLayout" name="formLayout_11">
        <property name="fieldGrowthPolicy">
         <enum>QFormLayout::AllNonFixedFieldsGrow</enum>
        </property>
        <item row="0" column="1">
         <widget class="QSplitter" name="splitter_13">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_select_all_linac">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>LINAC</string>
           </property>
          </widget>
         </widget>
        </item>
        <item row="1" column="1">
         <widget class="QSplitter" name="splitter_4">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_quadrupole_linac">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Quadrupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_sextupole_linac">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Sextupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_dipole_linac">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Dipole</string>
           </property>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QFrame" name="frame_14">
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <layout class="QFormLayout" name="formLayout_12">
        <property name="fieldGrowthPolicy">
         <enum>QFormLayout::AllNonFixedFieldsGrow</enum>
        </property>
        <item row="1" column="1">
         <widget class="QSplitter" name="splitter_5">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_quadrupole_ts">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Quadrupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_sextupole_ts">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Sextupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_dipole_ts">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Dipole</string>
           </property>
          </widget>
         </widget>
        </item>
        <item row="0" column="1">
         <widget class="QSplitter" name="splitter_14">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_select_all_ts">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>TS</string>
           </property>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QFrame" name="frame_15">
       <property name="frameShape">
        <enum>QFrame::Box</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
       <layout class="QFormLayout" name="formLayout_13">
        <property name="fieldGrowthPolicy">
         <enum>QFormLayout::AllNonFixedFieldsGrow</enum>
        </property>
        <item row="0" column="1">
         <widget class="QSplitter" name="splitter_15">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_select_all_tb">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>TB</string>
           </property>
          </widget>
         </widget>
        </item>
        <item row="1" column="1">
         <widget class="QSplitter" name="splitter_6">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <widget class="PyDMCheckbox" name="cb_quadrupole_tb">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Quadrupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_sextupole_tb">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Sextupole</string>
           </property>
          </widget>
          <widget class="PyDMCheckbox" name="cb_dipole_tb">
           <property name="enabled">
            <bool>true</bool>
           </property>
           <property name="toolTip">
            <string/>
           </property>
           <property name="whatsThis">
            <string/>
           </property>
           <property name="text">
            <string>Dipole</string>
           </property>
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
     </item>
     <item row="2" column="0" alignment="Qt::AlignHCenter">
      <widget class="PyDMPushButton" name="pb_reset">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>120</width>
         <height>120</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>120</width>
         <height>120</height>
        </size>
       </property>
       <property name="toolTip">
        <string/>
       </property>
       <property name="whatsThis">
        <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move
    
    Parameters
    ----------
    pressValue : int, float, str
        Value to be sent when the button is clicked
    
    channel : str
        ID of channel to manipulate

    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton


    relative : bool, optional
        Choice to have the button peform a relative put, instead of always
        setting to an absolute value
    </string>
       </property>
       <property name="text">
        <string>RESET</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1" alignment="Qt::AlignHCenter">
      <widget class="PyDMPushButton" name="pb_on_off">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>120</width>
         <height>120</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>120</width>
         <height>120</height>
        </size>
       </property>
       <property name="toolTip">
        <string/>
       </property>
       <property name="whatsThis">
        <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move
    
    Parameters
    ----------
    pressValue : int, float, str
        Value to be sent when the button is clicked
    
    channel : str
        ID of channel to manipulate

    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton


    relative : bool, optional
        Choice to have the button peform a relative put, instead of always
        setting to an absolute value
    </string>
       </property>
       <property name="text">
        <string>ON</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="2" column="2" alignment="Qt::AlignHCenter">
      <widget class="PyDMPushButton" name="pb_test_sequence">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>120</width>
         <height>120</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>120</width>
         <height>120</height>
        </size>
       </property>
       <property name="toolTip">
        <string/>
       </property>
       <property name="whatsThis">
        <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move
    
    Parameters
    ----------
    pressValue : int, float, str
        Value to be sent when the button is clicked
    
    channel : str
        ID of channel to manipulate

    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton


    relative : bool, optional
        Choice to have the button peform a relative put, instead of always
        setting to an absolute value
    </string>
       </property>
       <property name="text">
        <string>TEST 
 SEQUENCE</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
      </widget>
     </item>
    </layout>
   </widget>
   <widget class="QWidget" name="layoutWidget_2">
    <layout class="QGridLayout" name="gridLayout_5">
     <item row="0" column="0">
      <widget class="PyDMLabel" name="PyDMLabel_47">
       <property name="toolTip">
        <string/>
       </property>
       <property name="whatsThis">
        <string/>
       </property>
       <property name="styleSheet">
        <string notr="true">border: 0px</string>
       </property>
       <property name="text">
        <string>Test Sequence</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="PyDMLabel" name="PyDMLabel_48">
       <property name="toolTip">
        <string/>
       </property>
       <property name="whatsThis">
        <string/>
       </property>
       <property name="styleSheet">
        <string notr="true">border: 0px</string>
       </property>
       <property name="text">
        <string>Pane Report</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QTextEdit" name="te_test_sequence">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QTextEdit" name="te_pane_report">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="2" column="1" alignment="Qt::AlignRight">
      <widget class="PyDMPushButton" name="pb_export">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string/>
       </property>
       <property name="whatsThis">
        <string>
    Basic PushButton to send a fixed value.

    The PyDMPushButton is meant to hold a specific value, and send that value
    to a channel when it is clicked, much like the MessageButton does in EDM.
    The PyDMPushButton works in two different modes of operation, first, a
    fixed value can be given to the :attr:`.pressValue` attribute, whenever the
    button is clicked a signal containing this value will be sent to the
    connected channel. This is the default behavior of the button. However, if
    the :attr:`.relativeChange` is set to True, the fixed value will be added
    to the current value of the channel. This means that the button will
    increment a channel by a fixed amount with every click, a consistent
    relative move
    
    Parameters
    ----------
    pressValue : int, float, str
        Value to be sent when the button is clicked
    
    channel : str
        ID of channel to manipulate

    parent : QObject, optional
        Parent of PyDMPushButton

    label : str, optional
        String to place on button

    icon : QIcon, optional
        An Icon to display on the PyDMPushButton


    relative : bool, optional
        Choice to have the button peform a relative put, instead of always
        setting to an absolute value
    </string>
       </property>
       <property name="text">
        <string>Export</string>
       </property>
      </widget>
     </item>
    </layout>
   </widget>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>PyDMPushButton</class>
   <extends>QPushButton</extends>
   <header>pydm.widgets.pushbutton</header>
  </customwidget>
  <customwidget>
   <class>PyDMLineEdit</class>
   <extends>QLineEdit</extends>
   <header>pydm.widgets.line_edit</header>
  </customwidget>
  <customwidget>
   <class>PyDMLabel</class>
   <extends>QLabel</extends>
   <header>pydm.widgets.label</header>
  </customwidget>
  <customwidget>
   <class>PyDMCheckbox</class>
   <extends>QCheckBox</extends>
   <header>pydm.widgets.checkbox</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
